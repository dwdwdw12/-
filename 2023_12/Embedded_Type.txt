Embedded Type
https://tall-developer.tistory.com/16

* 임베디드 타입
	-예시) 테이블의 칼럼, startDate, endDate를 workPeriod로 축약, 다른 클래스로 뺌
	-예시2) city, street, zipcode 칼럼을 homeAddress로 축약
-복합 값 타입(주로 기본 값 타입을 모아서 만듦)
-새로운 값 타입 직접 정의 가능
-jpa에서 사용

* JPA의 데이터 타입
-엔티티 타입
	-@Entity로 정의
	-데이터가 변해도 식별자로 지속해서 추적 가능
-값 타입
	-int, Integer, String 처럼 단순 값으로 사용하는 자바 기본타입이나 객체 의미
	-데이터 변경시 추적 불가(식별자 없으므로)
	-기본값 타입 : 자바 기본타입(int, double...), 래퍼 클래스(Integer, Long), String
	-임베디드 타입
	-컬렉션 값 타입
* 임베디드 타입
-@Embeddable : 값 타입 정의하는 곳에 표시(임베디드 타입을 사용하기 위해 생성한 class 위에 표시)
-@Embedded : 값 타입 사용하는 곳에 표시(임베디드 타입을 사용한 Entity의 칼럼 위에 표시)
-장점 
	-재사용 가능
	-높은 응집도
	-해당 값 타입만 사용하는 메소드 생성 가능
	-값 타입을 소유한 엔티티에 생명주기에 의존
-특징
	-임베디드 타입은 엔티티의 값
	-사용여부에 따라 매핑하는 테이블에는 변확가 없음
	-객체와 테이블을 세밀하게 매핑하는 것이 가능
	-임베디드 클래스 안에 entity 넣어서 사용 가능
-@AttributeOverride : 하나의 엔티티에 임베디드 타입의 클래스를 합치고 싶을 때
-주의 :임베디드 타입을 여러 엔티티에서 공유할 경우, update 작업 중, 원하지 않는 값도 함께 변할 수 있음
	-setter를 구현하지 않거나, private로 구현
	-값 타입을 불변 객체로 설계(final..., Integer, String 등)
	-생성자로만 값을 설정할 수 있게 조치(setter 구현x)