연관관계 매핑
https://velog.io/@conatuseus/%EC%97%B0%EA%B4%80%EA%B4%80%EA%B3%84-%EB%A7%A4%ED%95%91-%EA%B8%B0%EC%B4%88-1-i3k0xuve9i
https://velog.io/@conatuseus/JPA-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%97%B0%EA%B4%80%EA%B4%80%EA%B3%84-%EB%A7%A4%ED%95%91

* 객체/테이블 연관관계
-객체 연관관계 : 참조를 통해 연관관계. 언제나 단방향. 필드를 추가하는 식으로 연관관계를 맺음
-테이블 연관관계 : 외래키를 통한 join. 이 경우, 테이블의 연관관꼐는 양방향

* 연관관계 지정
-@ManyToOne 
	-다대일(N:1) 관계.
	-속성) fetch : 패치 전략(기본값 : @ManyToOne -> EAGER, @OneToMany -> LAZY
	        cascade : 영속성 전이 기능
-@JoinColumn 
	-외래키 매핑 시 사용(생략시 기본 전략 사용(필드명_참조하는 테이블의 칼럼명)).

* 양방향 연관관계
-DB 테이블은 외래 키 하나로 양방향으로 조회할 수 있음
-@OneToMany 
	-mappedBy : 양방향 매핑일 때, 반대쪽 필드의 이름 기입.
-연관관계의 주인 
	-양방향 연관관계 매핑 시, 한 쪽을 주인으로 정해야 함
	-외래키가 있는 곳을 주인으로 선정.
	-주인만이 DB 연관관계와 매핑되고, 외래키 관리(등록, 수정, 삭제) 가능
		-반대편은 읽기만 가능
	-mappedBy 속성은 주인이 아닌 쪽만 사용
	-@ManyTo... : 항상 연관관계의 주인('다' 쪽.). mappedBy 속성이 없음.
-양쪽 모두 연관관계를 설정하는 것이 바람직