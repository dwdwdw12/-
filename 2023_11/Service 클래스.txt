Service 계층 작성
1. 3-tier architecture에서 presentation layer가 service interface/class를 호출. 
   service단은 business layer에 위치하여, business logic을 처리.
   (dao 클래스는 데이터베이스와의 상호작용을 담당)
	(https://velog.io/@chlee4858/3-tier-vs-MVC 참고하기)

2. service 패키지에 service interface와 구현 클래스를 작성.
   
3. root-context.xml-Namespaces에서 context 체크. 서비스 패키지를 등록하기
   <context:component-scan base-package="com.zerock.service"></context:component-scan>

4. service 구현 클래스는 @Service를 사용해 빈 등록.
   구현 클래스에서 sql문을 활용하는 부분은 mapper/dao를 이용.
   DAO에서 사용한 메서드명과 달리, 직관적으로 알아채기 쉽게 메서드명을 작성하기.
   이 부분과 별개로, 추가적인 동작을 지정해 줄 수 있음.

* 다음의 두 방식을 기억하기
	@AllArgsConstructor
	...
	private final BoardMapper boardMapper;
	
	@Autowired
	private WebApplicationContext context;
